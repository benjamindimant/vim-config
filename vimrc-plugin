"""" START Vundle Configuration

" Disable file type for vundle
filetype off 

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" General
Plugin 'scrooloose/nerdtree'
Plugin 'w0rp/ale'
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
Plugin 'ap/vim-buftabline'
Plugin 'Valloric/YouCompleteMe'
Plugin 'Raimondi/delimitMate'

" Colorscheme
Plugin 'blueshirts/darcula'

" Snippets
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

" SuperTab
Plugin 'ervandew/supertab'

" C/C++
Plugin 'vim-scripts/a.vim'

" Python
Plugin 'vim-scripts/indentpython.vim'

" Markdown
Plugin 'shime/vim-livedown'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'

" Theme / Interface
Plugin 'AnsiEsc.vim'
Plugin 'itchyny/lightline.vim'

call vundle#end()            " required
filetype plugin indent on    " required
"""" END Vundle Configuration

"""" BEGIN Vanilla
" Colors
colorscheme darcula
syntax on
set laststatus=2
" UI config
set number
set showmatch
set encoding=UTF-8

" Indentations
set shiftwidth=2
set autoindent
set smartindent
set expandtab
set softtabstop=2

set showmode
set showcmd
set wildmenu
set ruler
set nowrap
set ignorecase
set smartcase
set incsearch
set path==.,..,/usr/include/**,/usr/share/**

" Get rid of delay on ^[O
set timeout timeoutlen=5000 ttimeoutlen=100

" OSX backspace fix
set backspace=indent,eol,start

"""" END Vanilla

"""" BEGIN Bindings
" https://medium.com/@sidneyliebrand/a-collection-of-vim-key-binds-4d227c9a455
" Disable arrow keys
nmap <Up>    <Nop>
nmap <Down>  <Nop>
nmap <Left>  <Nop>
nmap <Right> <Nop>
inoremap <C-k> <Up>
inoremap <C-j> <Down>
inoremap <C-h> <Left>
inoremap <C-l> <Right>

" Tab and shift-Tab to indent
nnoremap <Tab>   >>
nnoremap <S-Tab> <<
vnoremap <Tab>   >><Esc>gv
vnoremap <S-Tab> <<<Esc>gv

" Fix Y
nnoremap Y y$
"""" End Bindings

"""" BEGIN NerdTree
map <C-o> :NERDTreeToggle<CR>
"""" END NerdTree

"""" BEGIN Lightline
let g:lightline = {
    \ 'colorscheme': 'jellybeans',
    \ }
"""" END Lightline

"""" BEGIN fzf
" Fzf Configuration
" This is the default extra key bindings
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }

" Default fzf layout
" - down / up / left / right
let g:fzf_layout = { 'down': '~40%' }

" Customize fzf colors to match your color scheme
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

" Enable per-command history.
" CTRL-N and CTRL-P will be automatically bound to next-history and
" previous-history instead of down and up. If you don't like the change,
" explicitly bind the keys to down and up in your $FZF_DEFAULT_OPTS.
let g:fzf_history_dir = '~/.local/share/fzf-history'

map ; :Files<CR>
"""" END fzf

"""" BEGIN delimitMate
" https://stackoverflow.com/questions/4237817/configuring-vim-for-c
au FileType mail let b:delimitMate_autoclose = 0
let g:delimitMate_expand_cr = 1
"""" END delimitMate

"""" BEGIN buftabline
nnoremap <C-N> :bnext<CR>
nnoremap <C-P> :bprev<CR>
nnoremap <C-X> :bd<CR>
"""" END buftabline

"""" BEGIN UltiSnips
" Make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" Better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" If you want :UltiSnipsEdit to split your window
let g:UltiSnipsEditSplit="vertical"
"""" END UltiSnips

"""" BEGIN python
au BufNewFile,BufRead *.py set tabstop=4 softtabstop=4 shiftwidth=4 textwidth=80 expandtab autoindent fileformat=unix
autocmd FileType python noremap <buffer> <A-CR> :call Autopep8()<CR>
let python_highlight_all=1
runtime ftplugin/vim-autopep8.vim
"""" END python

"""" BEGIN ale
let g:ale_sign_warning = '.'
let g:ale_lint_on_enter = 0 " Less distracting when opening a new file
"""" END ale

"""" Markdown
au BufReadPost,BufNewFile *.md LivedownPreview
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_new_list_item_indent = 2
""""

"""" C++
au BufWritePost *.cpp :py3f /usr/local/opt/clang-format/share/clang/clang-format.py
map <C-I> :py3f /usr/local/opt/clang-format/share/clang/clang-format.py<CR>
imap <C-I> <ESC>:py3f /usr/local/opt/clang-format/share/clang/clang-format.py<CR>i
""""
