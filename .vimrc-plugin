" Colors
colorscheme default
syntax on
set encoding=UTF-8
set laststatus=2

" UI config
set number
set showmatch

" Indentations
set shiftwidth=2
set autoindent
set smartindent
set expandtab
set softtabstop=2
" set textwidth=80

set showmode
set showcmd
set wildmenu
set ruler
set nowrap
set ignorecase
set smartcase
set incsearch
set path==.,..,/usr/include/**,/usr/share/**

"""" START Vundle Configuration

" Disable file type for vundle
filetype off 

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" General
Plugin 'scrooloose/nerdtree'
Plugin 'w0rp/ale'
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
Plugin 'ap/vim-buftabline'
Plugin 'Valloric/YouCompleteMe'

" React Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'skywind3000/asyncrun.vim'

" Python
Plugin 'vim-scripts/indentpython.vim'

" Theme / Interface
Plugin 'AnsiEsc.vim'
Plugin 'ryanoasis/vim-devicons'
Plugin 'itchyny/lightline.vim'
Plugin 'sjl/badwolf'
Plugin 'tomasr/molokai'
Plugin 'morhetz/gruvbox'
Plugin 'dracula/dracula-theme', {'rtp': 'vim/'}
Plugin 'junegunn/limelight.vim'
Plugin 'mkarmona/colorsbox'
Plugin 'romainl/Apprentice'
Plugin 'Lokaltog/vim-distinguished'
Plugin 'chriskempson/base16-vim'
Plugin 'w0ng/vim-hybrid'
Plugin 'daylerees/colour-schemes'
Plugin 'atelierbram/Base2Tone-vim'
Plugin 'blueshirts/darcula'

" OSX backspace fix
set backspace=indent,eol,start

call vundle#end()            " required
filetype plugin indent on    " required
"""" END Vundle Configuration

" Brackets

" Autocomplete brackets
inoremap {      {}<Left>
inoremap {<CR>  {<CR>}<Esc>O
inoremap {{     {
inoremap {}     {}

" Autocomplete brackets
inoremap (      ()<Left>
inoremap (<CR>  (<CR>)<Esc>O
inoremap ((     (
inoremap ()     ()

" Get rid of delay on ^[O
set timeout timeoutlen=5000 ttimeoutlen=100

" Theme and Styling
set t_Co=256
set background=dark

if (has("termguicolors"))
  set termguicolors
endif

let base16colorspace=256  " Access colors present in 256 colorspace
colorscheme darcula

let g:spacegray_underline_search = 1
let g:spacegray_italicize_comments = 1

" NerdTree
map <C-o> :NERDTreeToggle<CR>

" Lightline
let g:lightline = {
    \ 'colorscheme': 'jellybeans',
    \ }

" fzf
" Fzf Configuration
" This is the default extra key bindings
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }

" Default fzf layout
" - down / up / left / right
let g:fzf_layout = { 'down': '~40%' }

" Customize fzf colors to match your color scheme
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

" Enable per-command history.
" CTRL-N and CTRL-P will be automatically bound to next-history and
" previous-history instead of down and up. If you don't like the change,
" explicitly bind the keys to down and up in your $FZF_DEFAULT_OPTS.
let g:fzf_history_dir = '~/.local/share/fzf-history'

map ; :GFiles<CR>

" Buftabline
nnoremap <C-N> :bnext<CR>
nnoremap <C-P> :bprev<CR>
nnoremap <C-X> :bd<CR>

" Python
au BufNewFile,BufRead *.py set tabstop=4 softtabstop=4 shiftwidth=4 textwidth=80 expandtab autoindent fileformat=unix
autocmd FileType python noremap <buffer> <A-CR> :call Autopep8()<CR>
let python_highlight_all=1
runtime ftplugin/vim-autopep8.vim

" React
if filereadable("./node_modules/.bin/eslint")
  au BufWritePost *.jsx AsyncRun -post=checktime ./node_modules/.bin/eslint --fix %
endif
let g:ale_sign_warning = '.'
let g:ale_lint_on_enter = 0 " Less distracting when opening a new file
